{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useMutation, useQuery, useQueryCache, queryCache } from \"react-query\"; // function useLogin2(email, password) {\n//   const config = {\n//     headers: { \"Content-type\": \"application/json\" },\n//   };\n//   const body = JSON.stringify({ email, password });\n//   return useQuery(\n//     \"token\",\n//     () => axios.post(\"/api/auth\", body, config),\n//     {\n//       refetchOnWindowFocus: false,\n//       enabled: false, // turned off by default, manual refetch is needed\n//     }\n//   );\n// }\n\nexport default function useLogin(email, password) {\n  _s();\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  return useMutation(() => axios.post(\"http://localhost:5000/api/auth\", body, config).then(res => {\n    //console.log(res.data.token);\n    localStorage.setItem(\"token\", res.data.token);\n    console.log(\"test\", res);\n    return res.data;\n  }), {\n    onSuccess: () => {\n      queryCache.invalidateQueries(\"user\"); // console.log(\"sucess\");\n    }\n  });\n} // const login = ({ email, password }) => {\n//   const config = {\n//     headers: { \"Content-type\": \"application/json\" },\n//   };\n//   const body = JSON.stringify({ email, password });\n// };\n\n_s(useLogin, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"sources":["/home/lenovo/Desktop/virtualcoffee/frontend/src/components/hooks/auth_hooks/useLogin.js"],"names":["axios","useMutation","useQuery","useQueryCache","queryCache","useLogin","email","password","config","headers","body","JSON","stringify","post","then","res","localStorage","setItem","data","token","console","log","onSuccess","invalidateQueries"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,aAAhC,EAA+CC,UAA/C,QAAiE,aAAjE,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AAAA;;AAChD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADI,GAAf;AAGA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;AACA,SAAON,WAAW,CAChB,MACED,KAAK,CAACa,IAAN,CAAW,gCAAX,EAA6CH,IAA7C,EAAmDF,MAAnD,EAA2DM,IAA3D,CAAiEC,GAAD,IAAS;AACvE;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,GAApB;AACA,WAAOA,GAAG,CAACG,IAAX;AACD,GALD,CAFc,EAQhB;AACEI,IAAAA,SAAS,EAAE,MAAM;AACflB,MAAAA,UAAU,CAACmB,iBAAX,CAA6B,MAA7B,EADe,CAEf;AACD;AAJH,GARgB,CAAlB;AAeD,C,CAED;AACA;AACA;AACA;AACA;AACA;;GA3BwBlB,Q;UAKfJ,W","sourcesContent":["import axios from \"axios\";\nimport { useMutation, useQuery, useQueryCache, queryCache } from \"react-query\";\n\n// function useLogin2(email, password) {\n//   const config = {\n//     headers: { \"Content-type\": \"application/json\" },\n//   };\n//   const body = JSON.stringify({ email, password });\n//   return useQuery(\n//     \"token\",\n//     () => axios.post(\"/api/auth\", body, config),\n//     {\n//       refetchOnWindowFocus: false,\n//       enabled: false, // turned off by default, manual refetch is needed\n//     }\n//   );\n// }\nexport default function useLogin(email, password) {\n  const config = {\n    headers: { \"Content-type\": \"application/json\" },\n  };\n  const body = JSON.stringify({ email, password });\n  return useMutation(\n    () =>\n      axios.post(\"http://localhost:5000/api/auth\", body, config).then((res) => {\n        //console.log(res.data.token);\n        localStorage.setItem(\"token\", res.data.token);\n        console.log(\"test\", res);\n        return res.data;\n      }),\n    {\n      onSuccess: () => {\n        queryCache.invalidateQueries(\"user\");\n        // console.log(\"sucess\");\n      },\n    }\n  );\n}\n\n// const login = ({ email, password }) => {\n//   const config = {\n//     headers: { \"Content-type\": \"application/json\" },\n//   };\n//   const body = JSON.stringify({ email, password });\n// };\n"]},"metadata":{},"sourceType":"module"}